---
import type {  InferGetStaticPropsType } from "astro";
import Layout from "../layouts/Layout.astro";
import Tags from "../components/Tags.astro";
import getPosts from "../lib/getPosts";
import Shadowbox from "../components/Shadowbox.astro";
import PostMeta from "../components/PostMeta.astro";
import Typography from "../components/Typography.astro";
import Comments from "../components/Comments.astro";
import type { Post } from "../schemas/post";

export async function getStaticPaths() {
  const posts = await getPosts({
    includeUnpublished: true,
    sort: true
  });
  
  return posts.map((post: Post, i: number) => ({
    params: {
      slug: post.slug,
    },
    props: {
      post,
      newer: posts[i - 1],
      older: posts[i + 1],
    },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const {
  post,
  newer,
  older
} = Astro.props as Props;

const {
  content,
  title: rawTitle,
  tags,
  disqus,
  excerpt,
  image,
  status,
} = post

const isDraft = status === "draft";
const className = isDraft ? "draft" : undefined;
const title = isDraft ? `DRAFT: ${rawTitle}` : rawTitle;
const { extracted, ...imageProps } = image || {};
---

<Layout
  title={title}
  description={excerpt}
  image={image?.src}
  next={newer && {
    title: newer.title,
    url: `/${newer.slug}`,
  }}
  previous={older && {
    title: older.title,
    url: `/${older.slug}`,
  }}
>
  <Shadowbox padding={2} class={className}>
    <PostMeta
      post={{
        ...post,
        title,
      }}
      includeExcerpt={false}
      linkTitle={false}
      Heading="h1"
    />
    {extracted ? undefined : <img class="aligncenter" {...imageProps} />}
    <Typography set:html={content} />
    <Tags tags={tags} />
  </Shadowbox>

  <Shadowbox padding={2}>
    <Comments id={disqus.id} url={disqus.url} />
  </Shadowbox>
</Layout>

<style>
  .draft {
    border: 1rem solid #ff700a;
  }
</style>
